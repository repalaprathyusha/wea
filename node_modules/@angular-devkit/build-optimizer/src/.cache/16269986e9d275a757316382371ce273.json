{"remainingRequest":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular\\fire\\firestore\\observable\\fromRef.js","dependencies":[{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular\\fire\\firestore\\observable\\fromRef.js","mtime":1552283032055},{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552283083157},{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552283077916}],"contextDependencies":[],"result":["import { Observable } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nfunction _fromRef(ref) {\n    return new Observable(function (subscriber) {\n        var unsubscribe = ref.onSnapshot(subscriber);\n        return { unsubscribe: unsubscribe };\n    });\n}\nexport function fromRef(ref) {\n    return _fromRef(ref).pipe(share());\n}\nexport function fromDocRef(ref) {\n    return fromRef(ref)\n        .pipe(map(function (payload) { return ({ payload: payload, type: 'value' }); }));\n}\nexport function fromCollectionRef(ref) {\n    return fromRef(ref).pipe(map(function (payload) { return ({ payload: payload, type: 'query' }); }));\n}\n//# sourceMappingURL=fromRef.js.map",null]}