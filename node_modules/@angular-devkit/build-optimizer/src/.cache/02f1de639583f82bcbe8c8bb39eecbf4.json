{"remainingRequest":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-material-extensions\\password-strength\\esm5\\password-strength.es5.js","dependencies":[{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-material-extensions\\password-strength\\esm5\\password-strength.es5.js","mtime":1552283077179},{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552283083157},{"path":"C:\\Users\\bonala\\Desktop\\WeatherAppApi\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552283077916}],"contextDependencies":[],"result":["import { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { MatProgressBarModule, MatCardModule, MatIconModule } from '@angular/material';\nimport { Validators, FormControl } from '@angular/forms';\nimport { animation, style, animate, keyframes, trigger, transition, query, stagger, animateChild, useAnimation } from '@angular/animations';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar Colors = {\n    primary: 'primary',\n    accent: 'accent',\n    warn: 'warn',\n};\n/** @enum {number} */\nvar Criteria = /*@__PURE__*/ (function () {\n    var Criteria = {\n        at_least_eight_chars: 0,\n        at_least_one_lower_case_char: 1,\n        at_least_one_upper_case_char: 2,\n        at_least_one_digit_char: 3,\n        at_least_one_special_char: 4,\n    };\n    Criteria[Criteria.at_least_eight_chars] = 'at_least_eight_chars';\n    Criteria[Criteria.at_least_one_lower_case_char] = 'at_least_one_lower_case_char';\n    Criteria[Criteria.at_least_one_upper_case_char] = 'at_least_one_upper_case_char';\n    Criteria[Criteria.at_least_one_digit_char] = 'at_least_one_digit_char';\n    Criteria[Criteria.at_least_one_special_char] = 'at_least_one_special_char';\n    return Criteria;\n}());\nvar MatPasswordStrengthComponent = /** @class */ /*@__PURE__*/ (function () {\n    function MatPasswordStrengthComponent() {\n        this.validators = Object.keys(Criteria).map(( /**\n         * @param {?} key\n         * @return {?}\n         */function (key) { return Criteria[key]; }));\n        this.enableLengthRule = true;\n        this.enableLowerCaseLetterRule = true;\n        this.enableUpperCaseLetterRule = true;\n        this.enableDigitRule = true;\n        this.enableSpecialCharRule = true;\n        this.min = 8;\n        this.max = 30;\n        this.onStrengthChanged = new EventEmitter();\n        this.criteriaMap = new Map();\n        this.passwordFormControl = new FormControl();\n        this._strength = 0;\n    }\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            this.setRulesAndValidators();\n        };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n        function (changes) {\n            if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\n                return;\n            }\n            else if (changes.externalError && changes.externalError.currentValue) {\n                this._color = Colors.warn;\n                return;\n            }\n            else {\n                this.password && this.password.length > 0 ?\n                    this.calculatePasswordStrength() : this.reset();\n            }\n        };\n    Object.defineProperty(MatPasswordStrengthComponent.prototype, \"strength\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            return this._strength ? this._strength : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPasswordStrengthComponent.prototype, \"color\", {\n        get: /**\n         * @return {?}\n         */ function () {\n            if (this._strength <= 20) {\n                return Colors.warn;\n            }\n            else if (this._strength <= 80) {\n                return Colors.accent;\n            }\n            else {\n                return Colors.primary;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @private\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype._containAtLeastMinChars = /**\n     * @private\n     * @return {?}\n     */\n        function () {\n            this.containAtLeastMinChars = this.password.length >= this.min;\n            return this.containAtLeastMinChars;\n        };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype._containAtLeastOneLowerCaseLetter = /**\n     * @private\n     * @return {?}\n     */\n        function () {\n            this.containAtLeastOneLowerCaseLetter =\n                this.criteriaMap\n                    .get(Criteria.at_least_one_lower_case_char)\n                    .test(this.password);\n            return this.containAtLeastOneLowerCaseLetter;\n        };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype._containAtLeastOneUpperCaseLetter = /**\n     * @private\n     * @return {?}\n     */\n        function () {\n            this.containAtLeastOneUpperCaseLetter =\n                this.criteriaMap\n                    .get(Criteria.at_least_one_upper_case_char)\n                    .test(this.password);\n            return this.containAtLeastOneUpperCaseLetter;\n        };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype._containAtLeastOneDigit = /**\n     * @private\n     * @return {?}\n     */\n        function () {\n            this.containAtLeastOneDigit =\n                this.criteriaMap\n                    .get(Criteria.at_least_one_digit_char)\n                    .test(this.password);\n            return this.containAtLeastOneDigit;\n        };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype._containAtLeastOneSpecialChar = /**\n     * @private\n     * @return {?}\n     */\n        function () {\n            this.containAtLeastOneSpecialChar =\n                this.criteriaMap\n                    .get(Criteria.at_least_one_special_char)\n                    .test(this.password);\n            return this.containAtLeastOneSpecialChar;\n        };\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype.setRulesAndValidators = /**\n     * @return {?}\n     */\n        function () {\n            var _this = this;\n            if (this.enableLengthRule) {\n                this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(\"^.{\" + this.min + \",\" + this.max + \"$\"));\n            }\n            if (this.enableLowerCaseLetterRule) {\n                this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExp(/^(?=.*?[a-z])/));\n            }\n            if (this.enableUpperCaseLetterRule) {\n                this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExp(/^(?=.*?[A-Z])/));\n            }\n            if (this.enableDigitRule) {\n                this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExp(/^(?=.*?[0-9])/));\n            }\n            if (this.enableSpecialCharRule) {\n                this.criteriaMap.set(Criteria.at_least_one_special_char, RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/));\n            }\n            this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(Criteria.at_least_eight_chars)));\n            this.validators.map(( /**\n             * @param {?} criteria\n             * @return {?}\n             */function (criteria) {\n                _this.passwordFormControl.setValidators(Validators.pattern(_this.criteriaMap.get(criteria)));\n            }));\n        };\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype.calculatePasswordStrength = /**\n     * @return {?}\n     */\n        function () {\n            /** @type {?} */\n            var requirements = [];\n            /** @type {?} */\n            var unit = 100 / this.criteriaMap.size;\n            // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n            // console.log('unit = ', unit);\n            requirements.push(this.enableLengthRule ? this._containAtLeastMinChars() : false, this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false, this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false, this.enableDigitRule ? this._containAtLeastOneDigit() : false, this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false);\n            this._strength = requirements.filter(( /**\n             * @param {?} v\n             * @return {?}\n             */function (v) { return v; })).length * unit;\n            // console.log('length = ', this._strength / unit);\n            this.onStrengthChanged.emit(this.strength);\n        };\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthComponent.prototype.reset = /**\n     * @return {?}\n     */\n        function () {\n            this._strength = 0;\n            this.containAtLeastMinChars =\n                this.containAtLeastOneLowerCaseLetter =\n                    this.containAtLeastOneUpperCaseLetter =\n                        this.containAtLeastOneDigit =\n                            this.containAtLeastOneSpecialChar = false;\n        };\n    return MatPasswordStrengthComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} timing\n * @param {?} rotateX\n * @param {?} rotateY\n * @return {?}\n */\nfunction flipIn(timing, rotateX, rotateY) {\n    /** @type {?} */\n    var params = { timing: timing, delay: 0, rotateX: rotateX, rotateY: rotateY };\n    return animation([\n        style({ 'backface-visibility': 'visible' }),\n        animate('{{ timing }}s {{ delay }}s ease-in', keyframes([\n            style({\n                opacity: 0,\n                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n                offset: 0,\n            }),\n            style({\n                opacity: 1,\n                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n                offset: 0.4,\n            }),\n            style({\n                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n                offset: 0.6,\n            }),\n            style({\n                transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n                offset: 0.8,\n            }),\n            style({\n                transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n                offset: 1,\n            }),\n        ])),\n    ], { params: params });\n}\n/** @type {?} */\nvar flipInX = flipIn(1, 1, 0);\n/** @type {?} */\nvar flipInY = flipIn(1, 0, 1);\n/** @type {?} */\nvar shake = animation(animate('{{ timing }}s {{ delay }}s', keyframes([\n    style({ transform: 'translate3d(0, 0, 0)', offset: 0 }),\n    style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.1 }),\n    style({ transform: 'translate3d(10px, 0, 0)', offset: 0.2 }),\n    style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.3 }),\n    style({ transform: 'translate3d(10px, 0, 0)', offset: 0.4 }),\n    style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.5 }),\n    style({ transform: 'translate3d(10px, 0, 0)', offset: 0.6 }),\n    style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.7 }),\n    style({ transform: 'translate3d(10px, 0, 0)', offset: 0.8 }),\n    style({ transform: 'translate3d(-10px, 0, 0)', offset: 0.9 }),\n    style({ transform: 'translate3d(0, 0, 0)', offset: 1 }),\n])), { params: { timing: 1, delay: 0 } });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatPasswordStrengthInfoComponent = /** @class */ /*@__PURE__*/ (function () {\n    function MatPasswordStrengthInfoComponent() {\n        this.enableScoreInfo = false;\n        this.lowerCaseCriteriaMsg = 'contains at least one lower character';\n        this.upperCaseCriteriaMsg = 'contains at least one upper character';\n        this.digitsCriteriaMsg = 'contains at least one digit character';\n        this.specialCharsCriteriaMsg = 'contains at least one special character';\n    }\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthInfoComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n        function () {\n            if (!this.minCharsCriteriaMsg) {\n                this.minCharsCriteriaMsg = \"contains at least \" + this.passwordComponent.min + \" characters\";\n            }\n        };\n    return MatPasswordStrengthInfoComponent;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatPasswordStrengthModule = /** @class */ /*@__PURE__*/ (function () {\n    function MatPasswordStrengthModule() {\n    }\n    /**\n     * @return {?}\n     */\n    MatPasswordStrengthModule.forRoot = /**\n     * @return {?}\n     */\n        function () {\n            return {\n                ngModule: MatPasswordStrengthModule,\n                providers: []\n            };\n        };\n    return MatPasswordStrengthModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nexport { MatPasswordStrengthComponent, MatPasswordStrengthInfoComponent, MatPasswordStrengthModule, shake as ɵa };\n//# sourceMappingURL=password-strength.es5.js.map\n",null]}